{"version":3,"file":"interactions.js","sourceRoot":"","sources":["../src/interactions.ts"],"names":[],"mappings":"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","sourcesContent":["import { entersState, joinVoiceChannel, VoiceConnection, VoiceConnectionStatus } from '@discordjs/voice';\nimport { Client, CommandInteraction, GuildMember, Snowflake } from 'discord.js';\nimport { createListeningStream } from './createListeningStream';\n\nasync function join(\n\tinteraction: CommandInteraction,\n\trecordable: Set<Snowflake>,\n\tclient: Client,\n\tconnection?: VoiceConnection,\n) {\n\tawait interaction.deferReply();\n\tif (!connection) {\n\t\tif (interaction.member instanceof GuildMember && interaction.member.voice.channel) {\n\t\t\tconst channel = interaction.member.voice.channel;\n\t\t\tconnection = joinVoiceChannel({\n\t\t\t\tchannelId: channel.id,\n\t\t\t\tguildId: channel.guild.id,\n\t\t\t\tselfDeaf: false,\n\t\t\t\tselfMute: true,\n\t\t\t\t// @ts-expect-error Currently voice is built in mind with API v10 whereas discord.js v13 uses API v9.\n\t\t\t\tadapterCreator: channel.guild.voiceAdapterCreator,\n\t\t\t});\n\t\t} else {\n\t\t\tawait interaction.followUp('Join a voice channel and then try that again!');\n\t\t\treturn;\n\t\t}\n\t}\n\n\ttry {\n\t\tawait entersState(connection, VoiceConnectionStatus.Ready, 20e3);\n\t\tconst receiver = connection.receiver;\n\n\t\treceiver.speaking.on('start', (userId) => {\n\t\t\tif (recordable.has(userId)) {\n\t\t\t\tcreateListeningStream(receiver, userId, client.users.cache.get(userId));\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tconsole.warn(error);\n\t\tawait interaction.followUp('Failed to join voice channel within 20 seconds, please try again later!');\n\t}\n\n\tawait interaction.followUp('Ready!');\n}\n\nasync function record(\n\tinteraction: CommandInteraction,\n\trecordable: Set<Snowflake>,\n\tclient: Client,\n\tconnection?: VoiceConnection,\n) {\n\tif (connection) {\n\t\tconst userId = interaction.options.get('speaker')!.value! as Snowflake;\n\t\trecordable.add(userId);\n\n\t\tconst receiver = connection.receiver;\n\t\tif (connection.receiver.speaking.users.has(userId)) {\n\t\t\tcreateListeningStream(receiver, userId, client.users.cache.get(userId));\n\t\t}\n\n\t\tawait interaction.reply({ ephemeral: true, content: 'Listening!' });\n\t} else {\n\t\tawait interaction.reply({ ephemeral: true, content: 'Join a voice channel and then try that again!' });\n\t}\n}\n\nasync function leave(\n\tinteraction: CommandInteraction,\n\trecordable: Set<Snowflake>,\n\t_client: Client,\n\tconnection?: VoiceConnection,\n) {\n\tif (connection) {\n\t\tconnection.destroy();\n\t\trecordable.clear();\n\t\tawait interaction.reply({ ephemeral: true, content: 'Left the channel!' });\n\t} else {\n\t\tawait interaction.reply({ ephemeral: true, content: 'Not playing in this server!' });\n\t}\n}\n\nexport const interactionHandlers = new Map<\n\tstring,\n\t(\n\t\tinteraction: CommandInteraction,\n\t\trecordable: Set<Snowflake>,\n\t\tclient: Client,\n\t\tconnection?: VoiceConnection,\n\t) => Promise<void>\n>();\ninteractionHandlers.set('join', join);\ninteractionHandlers.set('record', record);\ninteractionHandlers.set('leave', leave);\n"]}